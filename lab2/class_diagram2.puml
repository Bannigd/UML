@startuml
skinparam classAttributeIconSize 0
hide empty members

!define datatype(x) class "x" << (D) DataType>>

datatype(Детали) {
	деталь : Деталь
	количество: int
}

datatype(Дата) {
	день : int
	месяц : int
	год : int
}

enum Пол {
	МУЖСКОЙ
	ЖЕНСКИЙ
}

enum Статус {
	ЖДЕТ_ИСПОЛНИТЕЛЯ
	В_ПРОЦЕССЕ
	ГОТОВ
}

class Деталь {
	+название : string
	+описание : string
}

interface Манипулировать_деталями <<interface>> {
	+взять_детали(деталь : string, количество : int)
	+добавить_детали(деталь : string, количество : int)
}

Детали ..|> Манипулировать_деталями
Хранилище ..> Манипулировать_деталями :  "<<call>>"

abstract Хранилище {
	-ID : int {readonly}
	-ID_ответственного : int
	-содержимое : Детали
	+получить_ID() : int {query}
	+получить_ID_ответственного() : int {query}
	+получить_список_содержимого() : Детали {query}
	+получить_количество(деталь : string) : int {query}
	+сменить_ответственного(сотрудник : Сотрудник)
}

class Склад {
	-заказы : List<Заказ>
	-кладовщики : List<Кладовщик>
}

class Рабочее_место {
	-сборщики : List<Сборщик>
}

Рабочее_место "1" -- "0..*" Сборщик

Склад ---|> Хранилище
Рабочее_место ---|> Хранилище

class План {
	-детали : Детали
	-дедлайн : Дата
	-Задания : List<>
	+поменять_дедлайн(дата: Дата)
	+выбрать_детали(детали: Детали)
	+назначить_сборщика(сборщик: Сборщик)
	+получить_статус() : string
	+создать_задание(кладовщик: Кладовщик) : Задание
}

class Заказ {
	-детали : Детали
	-статус : Статус
	+обработать_заказ(деталь : string, количество : int)
	+получить_статус() : Статус
}

interface Создавать <<interface>> {
	+создать_заказ()
	+проверить_выполнение()
}

interface Выполнять <<interface>> {
	+собрать_заказ()
	+обновить_статус()
	+зафиксировать_окончание()
}

Заказ ..|> Создавать
Заказ ..|> Выполнять
Сборщик ..> Создавать :  "<<call>>"
Кладовщик ..> Выполнять : "<<call>>"

class Задание {
	-описание : string
	-статус : string
	-сборщик : Сборщик
	+получить_статус() : string
	+получить_сборщика() : Сборщик
}
 
abstract Сотрудник {
	-фамилия : string
	-имя : string
	-отчество : string
	-ID : int {readonly}
	-пол : Пол
	-должность : string

	+изменить_фамилию(фамилия : string)
	+изменить_имя(имя : string)
	+изменить_отчество(отчество : string)
	+получить_ID() : int {query}
	+получить_ФИО() : string[1..3] {query}
}

class Кладовщик {
	+текущий_заказ : Заказ
	+просмотреть_количество_комплектующих()
	+обработать_заказ(заказ: Заказ)
}

class Бригадир {
	+создать_план(план: План)
	+назначить_сборщика(сборщик: Сборщик)
}

class Сборщик {
	-задания : List<Задание>
	+просмотреть_план(план: План)
	+заказать_комплектующие(комплектующие: Детали)
	+получить_задания() : List<Задание>
}

Сотрудник <|--- Кладовщик
Сотрудник <|--- Сборщик
Сотрудник <|--- Бригадир


План "1"	o-- "1..*" Задание
Кладовщик "1"	o-- "0..1" Заказ
Хранилище "1"	*-- "0..*" Детали
Детали "1"	*-- "0..*" Деталь	
Склад "1"	 -- "0..*" Заказ	
Сборщик "1"	-- "0..*" Задание	

План  -- Бригадир



@enduml
